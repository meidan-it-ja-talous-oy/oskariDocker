# Use postgres/example user/password credentials
version: '3.2'

services:

  # https://github.com/jwilder/nginx-proxy
  nginx-proxy:
    image: jwilder/nginx-proxy:alpine
    container_name: nginxproxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certs:/etc/nginx/certs:ro
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: always

  # https://github.com/JrCs/docker-letsencrypt-nginx-proxy-companion
  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-nginx-proxy-companion
    volumes:
      - certs:/etc/nginx/certs
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always
    environment:
      - NGINX_PROXY_CONTAINER=nginxproxy

  # https://github.com/meidan-it-ja-talous-oy/oskariDocker
  oskari:
    image: oskari_base:latest
    ports:
      - "8080:8080"
    environment:
      VIRTUAL_HOST: oskari.local
      VIRTUAL_PORT: 8080
      LETSENCRYPT_HOST: oskari.local

  # https://github.com/kartoza/docker-postgis
  db:
    image: kartoza/postgis
    ports:
      - "25432:5432"
    restart: always
    volumes:
      - /postgres_data:/var/lib/postgresql
    environment:
      POSTGRES_USER: oskari
      POSTGRES_PASS: oskari
      POSTGRES_DBNAME: oskaridb

volumes: 
  certs:
  html:
  vhostd: